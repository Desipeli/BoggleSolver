{"version":3,"file":"component---src-pages-opencv-test-js-5aa5c51f049da09c33c6.js","mappings":"wIA0EA,UAxEmBA,KACjB,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,WAAS,IACzC,EAACC,EAAa,EAACC,IAAmBF,EAAAA,EAAAA,WAAS,IAC3C,EAACG,EAAc,EAACC,IAAoBJ,EAAAA,EAAAA,UAAS,OAEnDK,EAAAA,EAAAA,YAAU,KACUC,WAChB,GAAIL,GAAgBE,EAAe,CACjC,MAAMI,EAAaC,SAASC,eAAe,gBAC3C,IAEE,GAAIC,OAAOC,IAAMD,OAAOC,GAAGC,KAAOL,EAAY,CAChCG,OAAOC,GAAGE,OAAON,GAKzBO,SAGJf,GAAe,EACjB,CACF,CAAE,MAAOgB,GACPC,QAAQD,MAAM,sCAAuCA,EACvD,CACF,GAGFE,EAAW,GACV,CAAChB,EAAcE,IAsBlB,OACEe,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,8BACJA,EAAAA,cAAA,UAAQC,QAvBaC,KAEvB,MAAMC,EAASb,SAASc,cAAc,UACtCD,EAAOE,IAAM,2CACbF,EAAOG,OAAS,KAGdR,QAAQS,IAAI,UAAU,EAExBjB,SAASkB,KAAKC,YAAYN,EAAO,GAcI,eACnCH,EAAAA,cAAA,SAAOU,KAAK,OAAOC,OAAO,UAAUC,SAZbC,IACzB,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC5BF,IACF5B,EAAiB+B,IAAIC,gBAAgBJ,IACrCjC,GAAe,GACjB,IAQGI,GACCe,EAAAA,cAAA,OACEmB,GAAG,eACHC,IAAI,gBACJf,IAAKpB,EACLoC,OAAQA,KACDzC,GACHC,GAAe,EACjB,IAIF,C","sources":["webpack://boggle-solver/./src/pages/opencvTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst OpencvTest = () => {\r\n  const [imageLoaded, setImageLoaded] = useState(false)\r\n  const [opencvLoaded, setOpencvLoaded] = useState(false)\r\n  const [selectedImage, setSelectedImage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      if (opencvLoaded && selectedImage) {\r\n        const imgElement = document.getElementById('opencv-image')\r\n        try {\r\n          // Ensure cv is defined before using it\r\n          if (window.cv && window.cv.Mat && imgElement) {\r\n            const src = window.cv.imread(imgElement)\r\n\r\n            // Perform OpenCV operations\r\n\r\n            // Release resources\r\n            src.delete()\r\n\r\n            // Set the flag to indicate that the image is loaded\r\n            setImageLoaded(true)\r\n          }\r\n        } catch (error) {\r\n          console.error('Error processing image with OpenCV:', error)\r\n        }\r\n      }\r\n    }\r\n\r\n    loadImage()\r\n  }, [opencvLoaded, selectedImage])\r\n\r\n  const handleOpenCvLoad = () => {\r\n    // Load OpenCV when the button is clicked\r\n    const script = document.createElement('script')\r\n    script.src = 'https://docs.opencv.org/master/opencv.js'\r\n    script.onload = () => {\r\n      // OpenCV is now loaded\r\n      //setOpencvLoaded(true)\r\n      console.log('ladattu')\r\n    }\r\n    document.head.appendChild(script)\r\n  }\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      setSelectedImage(URL.createObjectURL(file))\r\n      setImageLoaded(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gatsby with OpenCV Example</h1>\r\n      <button onClick={handleOpenCvLoad}>Load OpenCV</button>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      {selectedImage && (\r\n        <img\r\n          id=\"opencv-image\"\r\n          alt=\"Example Image\"\r\n          src={selectedImage}\r\n          onLoad={() => {\r\n            if (!imageLoaded) {\r\n              setImageLoaded(true)\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OpencvTest\r\n"],"names":["OpencvTest","imageLoaded","setImageLoaded","useState","opencvLoaded","setOpencvLoaded","selectedImage","setSelectedImage","useEffect","async","imgElement","document","getElementById","window","cv","Mat","imread","delete","error","console","loadImage","React","onClick","handleOpenCvLoad","script","createElement","src","onload","log","head","appendChild","type","accept","onChange","event","file","target","files","URL","createObjectURL","id","alt","onLoad"],"sourceRoot":""}