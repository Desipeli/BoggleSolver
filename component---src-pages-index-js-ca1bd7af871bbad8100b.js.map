{"version":3,"file":"component---src-pages-index-js-ca1bd7af871bbad8100b.js","mappings":"wMAuDA,MArDkBA,IAA6B,IAA5B,SAAEC,EAAQ,SAAEC,GAAUF,EACvC,MAAMG,EAAmBC,EAAAA,OAAa,MAChCC,EAAYD,EAAAA,OAAa,IAE/BA,EAAAA,WAAgB,KACd,MAAME,EAAgBH,EAAiBI,QAEvCD,EAAcE,MAAMC,oBAAmB,UAAaP,EAAQ,oBAC5DI,EAAcE,MAAME,MAAsB,EAAXR,EAAY,KAAK,GAC/C,CAACA,IAEJ,MAAMS,EAAkBC,GAAWC,IACjC,GAAI,CAAC,YAAa,UAAUC,SAASD,EAAME,MAAQH,EAAQ,GACX,IAA1CP,EAAUE,QAAQK,GAAOI,MAAMC,OAAc,CAC/C,MAAMC,EAAYb,EAAUE,QAAQK,EAAQ,GAC5CM,EAAUC,QACVD,EAAUE,eAAiBF,EAAUF,MAAMC,OAC3CC,EAAUG,aAAeH,EAAUF,MAAMC,MAC3C,CACF,EAGIK,EAAqBV,GAAWC,IACtBA,EAAMU,OAAOP,MAEjBC,OAAS,GACbL,EAAQP,EAAUE,QAAQU,OAAS,GACrCZ,EAAUE,QAAQK,EAAQ,GAAGO,OAEjC,EAGF,OACEf,EAAAA,cAAA,OACEoB,IAAKrB,EACLsB,GAAG,iBACHC,KAAK,iBACLC,UAAS,sEAERC,MAAMC,KAAK,CAAEZ,OAAQhB,EAAWC,IAAY,CAAC4B,EAAGlB,IAC/CR,EAAAA,cAAA,SACEW,IAAKH,EACLY,IAAMO,GAAO1B,EAAUE,QAAQK,GAASmB,EACxCC,KAAK,OACLL,UAAU,6CACVM,SAAUX,EAAkBV,GAC5BsB,UAAWvB,EAAeC,OAG1B,ECpBV,MA7BiBZ,IAAuD,IAAtD,SAAEC,EAAQ,SAAEC,EAAQ,YAAEiC,EAAW,YAAEC,GAAapC,EAChE,OACEI,EAAAA,cAAA,WAASuB,UAAU,iCACjBvB,EAAAA,cAAA,UACEsB,KAAK,WACLD,GAAG,WACHE,UAAU,2IAEVvB,EAAAA,cAAA,UAAQY,MAAM,OAAM,UAEtBZ,EAAAA,cAAA,OAAKuB,UAAU,iBACbvB,EAAAA,cAAA,SACEqB,GAAG,YACHT,MAAOf,EACPgC,SAAWI,GAAMF,EAAYE,EAAEd,OAAOP,OACtCW,UAAU,yEAEZvB,EAAAA,cAAA,QAAMuB,UAAU,uBAAsB,KACtCvB,EAAAA,cAAA,SACEqB,GAAG,YACHT,MAAOd,EACP+B,SAAWI,GAAMD,EAAYC,EAAEd,OAAOP,OACtCW,UAAU,0EAGN,ECwBd,MA5CkB3B,IAAe,IAAd,KAAEsC,GAAMtC,EACzBuC,QAAQC,IAAIC,2CACZ,MAAMC,EACJD,0CACAH,EAAKK,QAAQC,MAAMC,KAAKC,GAASA,EAAKC,YACxCR,QAAQC,IAAIE,GACZ,MAAOzC,EAAUkC,GAAe/B,EAAAA,SAAe,IACxCF,EAAUkC,GAAehC,EAAAA,SAAe,GAE/C,OACEA,EAAAA,cAAA,QAAMuB,UAAU,qBACdvB,EAAAA,cAAA,WAASuB,UAAU,eACjBvB,EAAAA,cAAA,MAAIuB,UAAU,wEAAuE,oBAGrFvB,EAAAA,cAAC4C,EAAQ,CACP9C,SAAUA,EACVD,SAAUA,EACVmC,YAAaA,EACbD,YAAaA,IAEf/B,EAAAA,cAAA,WAASuB,UAAU,uCACjBvB,EAAAA,cAAA,OAAKuB,UAAU,6CACbvB,EAAAA,cAAA,SAAG,qCACHA,EAAAA,cAAA,SAAG,4DAELA,EAAAA,cAAC6C,EAAS,CAAChD,SAAUA,EAAUC,SAAUA,MAGxC,EAiBJ,MAAMgD,EAAOA,IAAM9C,EAAAA,cAAA,aAAO,Y","sources":["webpack://boggle-solver/./src/components/InputGrid.jsx","webpack://boggle-solver/./src/components/Settings.jsx","webpack://boggle-solver/./src/pages/index.js"],"sourcesContent":["import * as React from 'react'\r\n\r\nconst InputGrid = ({ rowCount, colCount }) => {\r\n  const gridContainerRef = React.useRef(null)\r\n  const inputRefs = React.useRef([])\r\n\r\n  React.useEffect(() => {\r\n    const gridContainer = gridContainerRef.current\r\n\r\n    gridContainer.style.gridTemplateColumns = `repeat(${colCount}, minmax(0, 1fr))`\r\n    gridContainer.style.width = `${colCount * 5}rem`\r\n  }, [colCount])\r\n\r\n  const handleInputKey = (index) => (event) => {\r\n    if (['Backspace', 'Delete'].includes(event.key) && index > 0) {\r\n      if (inputRefs.current[index].value.length === 0) {\r\n        const prevInput = inputRefs.current[index - 1]\r\n        prevInput.focus()\r\n        prevInput.selectionStart = prevInput.value.length\r\n        prevInput.selectionEnd = prevInput.value.length\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (index) => (event) => {\r\n    const value = event.target.value\r\n\r\n    if (value.length > 0) {\r\n      if (index < inputRefs.current.length - 1) {\r\n        inputRefs.current[index + 1].focus()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={gridContainerRef}\r\n      id=\"grid-container\"\r\n      name=\"grid-container\"\r\n      className={`grid gap-5 lg:w-1/2 min-w-84 max-w-lg mx-auto justify-items-center`}\r\n    >\r\n      {Array.from({ length: rowCount * colCount }, (_, index) => (\r\n        <input\r\n          key={index}\r\n          ref={(r) => (inputRefs.current[index] = r)}\r\n          type=\"text\"\r\n          className=\"w-14 h-14 rounded-md text-center uppercase\"\r\n          onChange={handleInputChange(index)}\r\n          onKeyDown={handleInputKey(index)}\r\n        ></input>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputGrid\r\n","import * as React from 'react'\r\n\r\nconst Settings = ({ rowCount, colCount, setRowCount, setColCount }) => {\r\n  return (\r\n    <section className=\"sm:flex block justify-between\">\r\n      <select\r\n        name=\"language\"\r\n        id=\"language\"\r\n        className=\"border border-gray-300 rounded-lg bg-slate-100 focus:border-green-500 text-xl w-full sm:w-1/2 min-h-16 hover:shadow-green-500 shadow-md\"\r\n      >\r\n        <option value=\"fin\">Suomi</option>\r\n      </select>\r\n      <div className=\"my-12 sm:my-0\">\r\n        <input\r\n          id=\"row-count\"\r\n          value={rowCount}\r\n          onChange={(e) => setRowCount(e.target.value)}\r\n          className=\"min-h-16 min-w-12 max-w-24 rounded-lg text-2xl font-bold text-center\"\r\n        ></input>\r\n        <span className=\"text-slate-100 mx-6\">X</span>\r\n        <input\r\n          id=\"col-count\"\r\n          value={colCount}\r\n          onChange={(e) => setColCount(e.target.value)}\r\n          className=\"min-h-16 min-w-12 max-w-24 rounded-lg text-2xl font-bold text-center\"\r\n        ></input>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import * as React from 'react'\r\nimport '../styles/global.css'\r\n\r\nimport InputGrid from '../components/InputGrid'\r\nimport Settings from '../components/Settings'\r\nimport { graphql } from 'gatsby'\r\n\r\nconst IndexPage = ({ data }) => {\r\n  console.log(process.env.GATSBY_BASE_URL)\r\n  const wordListURL =\r\n    process.env.GATSBY_BASE_URL +\r\n    data.allFile.nodes.map((node) => node.publicURL)\r\n  console.log(wordListURL)\r\n  const [rowCount, setRowCount] = React.useState(5)\r\n  const [colCount, setColCount] = React.useState(5)\r\n\r\n  return (\r\n    <main className=\"max-w-6xl mx-auto\">\r\n      <section className=\"m-2 sm:m-12\">\r\n        <h1 className=\"text-center text-5xl my-12 text-slate-100 text-decoration: underline\">\r\n          Boggle Ratkaisin\r\n        </h1>\r\n        <Settings\r\n          colCount={colCount}\r\n          rowCount={rowCount}\r\n          setColCount={setColCount}\r\n          setRowCount={setRowCount}\r\n        />\r\n        <section className=\"block lg:flex justify-between my-12\">\r\n          <div className=\"text-xl px-4 lg:my-0 my-12 text-slate-100\">\r\n            <p>Valitse kieli ja pelilaudan koko.</p>\r\n            <p>Kirjaa pelilaudan nopissa näkyvät kirjaimet taulukkoon.</p>\r\n          </div>\r\n          <InputGrid rowCount={rowCount} colCount={colCount} />\r\n        </section>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allFile(filter: { name: { eq: \"sanalista\" }, extension: { eq: \"json\" } }) {\r\n      nodes {\r\n        base\r\n        publicURL\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n\r\nexport const Head = () => <title>Home Page</title>\r\n"],"names":["_ref","rowCount","colCount","gridContainerRef","React","inputRefs","gridContainer","current","style","gridTemplateColumns","width","handleInputKey","index","event","includes","key","value","length","prevInput","focus","selectionStart","selectionEnd","handleInputChange","target","ref","id","name","className","Array","from","_","r","type","onChange","onKeyDown","setRowCount","setColCount","e","data","console","log","process","wordListURL","allFile","nodes","map","node","publicURL","Settings","InputGrid","Head"],"sourceRoot":""}