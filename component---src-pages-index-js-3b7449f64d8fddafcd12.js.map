{"version":3,"file":"component---src-pages-index-js-3b7449f64d8fddafcd12.js","mappings":"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","sources":["webpack://boggle-solver/./src/components/InputGrid.jsx","webpack://boggle-solver/./src/components/Settings.jsx","webpack://boggle-solver/./src/components/WordInfo.jsx","webpack://boggle-solver/./src/components/WordList.jsx","webpack://boggle-solver/./src/hooks/useLocalStorage.js","webpack://boggle-solver/./src/pages/index.js","webpack://boggle-solver/./src/services/ArrayGraph.js","webpack://boggle-solver/./src/services/SearchWords.js","webpack://boggle-solver/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://boggle-solver/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://boggle-solver/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://boggle-solver/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://boggle-solver/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://boggle-solver/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["import * as React from 'react'\r\nconst { indexToCoord } = require('../services/ArrayGraph')\r\n\r\nconst InputGrid = ({\r\n  gridSize,\r\n  gridValues,\r\n  setGridValues,\r\n  highlightedRoute,\r\n  setHighlightedRoute,\r\n}) => {\r\n  const gridContainerRef = React.useRef(null)\r\n  const inputRefs = React.useRef([])\r\n\r\n  React.useEffect(() => {\r\n    const gridContainer = gridContainerRef.current\r\n\r\n    const mediaQuery = window.matchMedia('(max-width: 400px)')\r\n\r\n    if (mediaQuery.matches) {\r\n      gridContainer.style.gridTemplateColumns = `repeat(${gridSize}, minmax(0, 1fr))`\r\n      gridContainer.style.width = `${gridSize * 3}rem`\r\n    } else {\r\n      gridContainer.style.gridTemplateColumns = `repeat(${gridSize}, minmax(0, 1fr))`\r\n      gridContainer.style.width = `${gridSize * 4}rem`\r\n    }\r\n  }, [gridSize])\r\n\r\n  const handleInputKey = (index) => (event) => {\r\n    if (['Backspace'].includes(event.key) && index > 0) {\r\n      if (inputRefs.current[index].value.length === 0) {\r\n        const prevInput = inputRefs.current[index - 1]\r\n        prevInput.focus()\r\n        prevInput.selectionStart = prevInput.value.length\r\n        prevInput.selectionEnd = prevInput.value.length\r\n      }\r\n    }\r\n    if (['Delete'].includes(event.key) && index < gridSize ** 2 - 1) {\r\n      if (inputRefs.current[index].value.length === 0) {\r\n        const nextInput = inputRefs.current[index + 1]\r\n        nextInput.focus()\r\n        nextInput.selectionStart = 0\r\n        nextInput.selectionEnd = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (index) => (event) => {\r\n    const value = event.target.value\r\n    const coord = indexToCoord(index, gridSize)\r\n    if (highlightedRoute.includes(`${coord[0]}${coord[1]}`)) {\r\n      setHighlightedRoute([])\r\n    }\r\n\r\n    const newGrid = [...gridValues]\r\n    newGrid[index] = value.toLowerCase()\r\n    setGridValues(newGrid)\r\n    if (value.length > 0) {\r\n      if (\r\n        index < inputRefs.current.length - 1 &&\r\n        inputRefs.current[index + 1] !== null\r\n      ) {\r\n        inputRefs.current[index + 1].focus()\r\n      }\r\n      if (index === gridSize ** 2 - 1) {\r\n        document.getElementById('search-words-btn').focus()\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (highlightedRoute.length === 0) return\r\n    for (let i = 0; i < highlightedRoute.length; i++) {}\r\n  }, [highlightedRoute])\r\n\r\n  return (\r\n    <div\r\n      ref={gridContainerRef}\r\n      id=\"grid-container\"\r\n      name=\"grid-container\"\r\n      className={`grid gap-5 lg:w-1/2 xs:max-w-lg w-full mx-auto justify-items-center`}\r\n    >\r\n      {Array.from({ length: gridSize ** 2 }, (_, index) => (\r\n        <div key={index} className=\"relative\">\r\n          <input\r\n            value={gridValues[index]}\r\n            ref={(r) => (inputRefs.current[index] = r)}\r\n            type=\"text\"\r\n            className={`${highlightedRoute.includes(`${indexToCoord(index, gridSize)[0]}${indexToCoord(index, gridSize)[1]}`) ? 'bg-lime-300 ' : ''}xs:w-14 xs:h-14 w-10 h-10 font-bold rounded-md text-center uppercase grid-input-field`}\r\n            onChange={handleInputChange(index)}\r\n            onKeyDown={handleInputKey(index)}\r\n          ></input>\r\n          {highlightedRoute.includes(\r\n            `${indexToCoord(index, gridSize)[0]}${indexToCoord(index, gridSize)[1]}`\r\n          ) && (\r\n            <div className=\"absolute top-0 right-0 bg-black rounded-bl-full text-white font-medium text-sm p-1\">\r\n              {highlightedRoute.findIndex(\r\n                (item) =>\r\n                  item ===\r\n                  `${indexToCoord(index, gridSize)[0]}${indexToCoord(index, gridSize)[1]}`\r\n              ) + 1}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputGrid\r\n","import * as React from 'react'\r\n\r\nconst Settings = ({\r\n  changeGridSize,\r\n  listOfDicts,\r\n  setDictionaryNameURL,\r\n  dictionaryNameURL,\r\n  gridSize,\r\n}) => {\r\n  return (\r\n    <section className=\"flex justify-between\">\r\n      <select\r\n        name=\"dictionary-select\"\r\n        id=\"dictionary-select\"\r\n        onChange={(e) => setDictionaryNameURL(JSON.parse(e.target.value))}\r\n        defaultValue={JSON.stringify(dictionaryNameURL)}\r\n        className=\"w-5/12 border border-gray-300 rounded-lg bg-slate-100 focus:border-green-500 text-xl  min-h-12 hover:shadow-green-500 shadow-md\"\r\n      >\r\n        {listOfDicts?.map((v) => (\r\n          <option key={v.name} value={JSON.stringify(v)}>\r\n            {v.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <select\r\n        name=\"grid-size-select\"\r\n        id=\"grid-size-select\"\r\n        defaultValue={gridSize}\r\n        className=\"w-5/12 border border-gray-300 rounded-lg bg-slate-100 focus:border-green-500 text-xl  min-h-12 hover:shadow-green-500 shadow-md\"\r\n        onChange={(e) => changeGridSize(e.target.value)}\r\n      >\r\n        <option value={4}>4 x 4</option>\r\n        <option value={5}>5 x 5</option>\r\n        <option value={6}>6 x 6</option>\r\n      </select>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import * as React from 'react'\r\n\r\nconst WordInfo = ({ word, routes, setHighlightedRoute }) => {\r\n  const [show, setShow] = React.useState(false)\r\n\r\n  const handleWordClick = () => {\r\n    setShow(!show)\r\n  }\r\n\r\n  return (\r\n    <div className={`${show ? 'my-4 ' : ''} text-center`}>\r\n      <span className=\"cursor-pointer text-center\" onClick={handleWordClick}>\r\n        {word}\r\n      </span>\r\n      {show &&\r\n        routes.map((route, routeI) => (\r\n          <div key={routeI}>\r\n            <p\r\n              onClick={() => setHighlightedRoute(route)}\r\n              className=\"cursor-pointer\"\r\n            >\r\n              {route.toString()}\r\n            </p>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WordInfo\r\n","import * as React from 'react'\r\nimport WordInfo from './WordInfo'\r\nconst { searchWords } = require('../services/SearchWords')\r\nconst { convertArrayTo2D } = require('../services/ArrayGraph')\r\n\r\nconst WordList = ({\r\n  dictionary,\r\n  gridValues,\r\n  gridSize,\r\n  setHighlightedRoute,\r\n}) => {\r\n  const [wordRoutes, setWordRoutes] = React.useState({})\r\n  const [findError, setFindError] = React.useState('')\r\n\r\n  const handleSearch = () => {\r\n    for (let i = 0; i < gridValues.length; i++) {\r\n      if (gridValues[i].length === 0) {\r\n        setFindError('Täytä taulukko')\r\n        setWordRoutes({})\r\n        return\r\n      }\r\n    }\r\n\r\n    setFindError('')\r\n\r\n    const array2D = convertArrayTo2D(gridValues, gridSize)\r\n    const startTime = performance.now()\r\n    const result = searchWords(array2D, dictionary) // result = [word, coordinate, coordinate,...]\r\n    const endTime = performance.now()\r\n    console.log('search dureation:', endTime - startTime, 'milliseconds')\r\n    if (result.length > 0) {\r\n      organizeFoundWords(result)\r\n    }\r\n  }\r\n\r\n  const organizeFoundWords = (words) => {\r\n    const sortedByLength = words.sort(\r\n      (a, b) => b[0].length - a[0].length || a[0].localeCompare(b[0], 'fi')\r\n    )\r\n    const newWordRoutes = {}\r\n    for (let i = 0; i < sortedByLength.length; i++) {\r\n      if (!(sortedByLength[i][0] in newWordRoutes)) {\r\n        newWordRoutes[sortedByLength[i][0]] = [sortedByLength[i].splice(1)]\r\n      } else {\r\n        newWordRoutes[sortedByLength[i][0]].push(sortedByLength[i].splice(1))\r\n      }\r\n    }\r\n    setWordRoutes(newWordRoutes)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex justify-center mx-2\">\r\n        <div>\r\n          <p className=\"text-center my-2 text-red-500 text-xl\" id=\"find-error\">\r\n            {findError}\r\n          </p>\r\n          <button\r\n            name=\"search-words-btn\"\r\n            id=\"search-words-btn\"\r\n            className=\"border rounded-lg min-h-12 w-80 bg-slate-100\"\r\n            onClick={handleSearch}\r\n          >\r\n            Etsi sanat\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <section className=\"grid gap-2 grid-cols-1 md:grid-cols-3 xs:grid-cols-2 justify-items-center text-2xl text-slate-100 my-4\">\r\n        {Object.keys(wordRoutes)\r\n          .sort((a, b) => b.length - a.length || a.localeCompare(b, 'fi'))\r\n          .map((word, i) => (\r\n            <WordInfo\r\n              key={i}\r\n              word={word}\r\n              routes={wordRoutes[word]}\r\n              setHighlightedRoute={setHighlightedRoute}\r\n            />\r\n          ))}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WordList\r\n","import { useState, useEffect } from 'react'\r\n\r\nfunction getStorageValue(key, defaultValue) {\r\n  if (typeof window !== 'undefined') {\r\n    const saved = localStorage.getItem(key)\r\n    const initial = JSON.parse(saved)\r\n    return initial || defaultValue\r\n  } else {\r\n    return defaultValue\r\n  }\r\n}\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageValue(key, defaultValue)\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n  }, [key, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import * as React from 'react'\r\nimport '../styles/global.css'\r\n\r\nimport InputGrid from '../components/InputGrid'\r\nimport Settings from '../components/Settings'\r\nimport WordList from '../components/WordList'\r\n\r\nimport { useLocalStorage } from '../hooks/useLocalStorage'\r\n\r\nimport { graphql } from 'gatsby'\r\n\r\n// import dictJSON from '../data/dictionaries/Suomi-kotus.json'\r\n\r\nconst IndexPage = ({ data }) => {\r\n  let baseURL = ''\r\n  if (process.env.NODE_ENV === 'production') {\r\n    baseURL = process.env.GATSBY_BASE_URL\r\n  }\r\n  //const [gridSize, setGridSize] = React.useState(4)\r\n  const [gridSize, setGridSize] = useLocalStorage('gridSize', 4)\r\n  const [gridValues, setGridValues] = React.useState(\r\n    Array.from({ length: gridSize ** 2 }, () => '')\r\n  )\r\n  const [highlightedRoute, setHighlightedRoute] = React.useState([])\r\n\r\n  const [dictionary, setDictionary] = React.useState([])\r\n  const listOfDicts = data.allFile.nodes\r\n  // const [dictionaryNameURL, setDictionaryNameURL] = React.useState(\r\n  //   listOfDicts[0]\r\n  // )\r\n  const [dictionaryNameURL, setDictionaryNameURL] = useLocalStorage(\r\n    'currentDictionary',\r\n    listOfDicts[0]\r\n  )\r\n  const changeGridSize = (value) => {\r\n    setGridSize(value)\r\n    setGridValues(Array.from({ length: value * value }, () => ''))\r\n    setHighlightedRoute([])\r\n  }\r\n\r\n  const loadDictionary = () => {\r\n    if (!dictionaryNameURL) return\r\n    fetch(`${baseURL}${dictionaryNameURL.publicURL}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setDictionary(data)\r\n      })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    loadDictionary()\r\n  }, [dictionaryNameURL])\r\n\r\n  return (\r\n    <main className=\"max-w-4xl mx-auto\">\r\n      <div className=\"m-2 sm:m-12\">\r\n        <section>\r\n          <h1 className=\"text-center text-5xl my-12 text-slate-100 text-decoration: underline\">\r\n            Boggle Ratkaisin\r\n          </h1>\r\n          <Settings\r\n            changeGridSize={changeGridSize}\r\n            listOfDicts={listOfDicts}\r\n            setDictionaryNameURL={setDictionaryNameURL}\r\n            gridSize={gridSize}\r\n            dictionaryNameURL={dictionaryNameURL}\r\n          />\r\n          <section className=\"block lg:flex justify-between my-12\">\r\n            <div className=\"lg:w-1/2 w-full text-xl px-4 lg:my-0 my-12 text-slate-100\">\r\n              <p>Valitse kieli ja pelilaudan koko.</p>\r\n              <p>Kirjaa pelilaudan nopissa näkyvät kirjaimet taulukkoon.</p>\r\n            </div>\r\n            <InputGrid\r\n              gridValues={gridValues}\r\n              setGridValues={setGridValues}\r\n              highlightedRoute={highlightedRoute}\r\n              setHighlightedRoute={setHighlightedRoute}\r\n              gridSize={gridSize}\r\n            />\r\n          </section>\r\n        </section>\r\n        <WordList\r\n          dictionary={dictionary}\r\n          gridValues={gridValues}\r\n          setHighlightedRoute={setHighlightedRoute}\r\n          gridSize={gridSize}\r\n        />\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allFile(\r\n      filter: {\r\n        relativeDirectory: { eq: \"dictionaries\" }\r\n        extension: { eq: \"json\" }\r\n      }\r\n      sort: { name: ASC }\r\n    ) {\r\n      nodes {\r\n        name\r\n        publicURL\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n\r\nexport const Head = () => <title>Boggle Ratkaisin</title>\r\n","const convertArrayTo2D = (array, gridSize) => {\r\n  const graph = []\r\n  for (let rowI = 0; rowI < gridSize; rowI++) {\r\n    const new_row = []\r\n    for (let colI = 0; colI < gridSize; colI++) {\r\n      new_row.push(array[rowI * gridSize + colI])\r\n    }\r\n    graph.push(new_row)\r\n  }\r\n\r\n  return graph\r\n}\r\n\r\nconst indexToCoord = (index, gridSize) => {\r\n  const row = Math.floor(index / gridSize)\r\n  const col = index % gridSize\r\n  return [row, col]\r\n}\r\n\r\nmodule.exports = {\r\n  convertArrayTo2D,\r\n  indexToCoord,\r\n}\r\n","/**\r\n *\r\n * @param {Array} graph 2D array\r\n * @param {Array} dictionary list of words\r\n */\r\nconst searchWords = (graph, dictionary) => {\r\n  let found = []\r\n  for (let row = 0; row < graph.length; row++) {\r\n    for (let col = 0; col < graph[0].length; col++) {\r\n      const result = dfs(graph, row, col, [], [], dictionary)\r\n      if (result.length > 0) {\r\n        found = [...found, ...result]\r\n      }\r\n    }\r\n  }\r\n  return found.sort((a, b) => a[0].localeCompare(b[0]))\r\n}\r\n\r\nconst directions = [\r\n  [0, 1],\r\n  [1, 1],\r\n  [1, 0],\r\n  [1, -1],\r\n  [0, -1],\r\n  [-1, -1],\r\n  [-1, 0],\r\n  [-1, 1],\r\n]\r\n\r\n/**\r\n * @param {array} graph 2D array\r\n * @param {number} row row index\r\n *  @param {number} colI column index\r\n *  @param {array} visitedC array of visited coordinates 'row,col'\r\n *  @param {array} visitedL array of visited letters*/\r\nconst dfs = (graph, rowI, colI, visitedC, visitedL, dictionary) => {\r\n  const currentNodeStr = `${rowI}${colI}`\r\n  if (visitedC.includes(currentNodeStr)) {\r\n    return []\r\n  }\r\n  visitedC.push(currentNodeStr)\r\n  visitedL.push(graph[rowI][colI])\r\n  // console.log('dfs', 'node', currentNodeStr, visitedC, visitedL)\r\n  let found = []\r\n\r\n  const binResult = binarySearchDict(visitedL.join(''), dictionary)\r\n  // console.log('bin', binResult)\r\n  if (binResult[0] === true) {\r\n    found.push([visitedL.join(''), ...visitedC])\r\n  } else if (binResult[1] === false) {\r\n    // console.log('Älä ees yritä')\r\n    visitedC.pop()\r\n    visitedL.pop()\r\n    return []\r\n  }\r\n\r\n  // console.log('node', currentNodeStr, 'before new directions, found', found)\r\n\r\n  for (let i = 0; i < directions.length; i++) {\r\n    const nextNode = [rowI + directions[i][0], colI + directions[i][1]]\r\n    // console.log('current node', currentNodeStr, 'nextnode', nextNode)\r\n    if (\r\n      nextNode[0] < 0 ||\r\n      nextNode[1] < 0 ||\r\n      nextNode[0] >= graph.length ||\r\n      nextNode[1] >= graph[0].length\r\n    ) {\r\n      continue\r\n    }\r\n\r\n    const result = dfs(\r\n      graph,\r\n      nextNode[0],\r\n      nextNode[1],\r\n      visitedC,\r\n      visitedL,\r\n      dictionary\r\n    )\r\n    if (result.length > 0) {\r\n      found = [...found, ...result]\r\n    }\r\n  }\r\n\r\n  // console.log('node', currentNodeStr, 'after new directions, found', found)\r\n\r\n  visitedC.pop()\r\n  visitedL.pop()\r\n  return found\r\n}\r\n\r\nconst binarySearchDict = (word, dictionary) => {\r\n  const wordList = dictionary.words\r\n  let start = 0\r\n  let end = wordList.length\r\n  let beginsWith = false\r\n\r\n  while (true) {\r\n    // let quotient = (end-start / 2) | 0;\r\n    const middlepoint = start + Math.floor((end - start) / 2)\r\n    // console.log(start, middlepoint, end, dictionary[middlepoint])\r\n\r\n    const comparison = word.localeCompare(\r\n      wordList[middlepoint],\r\n      dictionary.language\r\n    )\r\n    if (comparison === 0) {\r\n      return [true, middlepoint]\r\n    }\r\n    if (\r\n      middlepoint >= 0 &&\r\n      middlepoint <= wordList.length - 1 &&\r\n      wordList[middlepoint].startsWith(word)\r\n    ) {\r\n      beginsWith = true // word can be found later\r\n    }\r\n    if (end - start <= 0) {\r\n      return [false, beginsWith]\r\n    }\r\n    if (comparison === 1) {\r\n      start = middlepoint + 1\r\n    }\r\n    if (comparison === -1) {\r\n      end = middlepoint - 1\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  searchWords,\r\n  binarySearchDict,\r\n  dfs,\r\n}\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["indexToCoord","require","_ref","gridSize","gridValues","setGridValues","highlightedRoute","setHighlightedRoute","gridContainerRef","React","inputRefs","gridContainer","current","window","matchMedia","matches","style","gridTemplateColumns","width","handleInputKey","index","event","includes","key","value","length","prevInput","focus","selectionStart","selectionEnd","nextInput","handleInputChange","target","coord","newGrid","_toConsumableArray","toLowerCase","document","getElementById","i","ref","id","name","className","Array","from","_","r","type","onChange","onKeyDown","findIndex","item","changeGridSize","listOfDicts","setDictionaryNameURL","dictionaryNameURL","e","JSON","parse","defaultValue","stringify","map","v","word","routes","show","setShow","onClick","handleWordClick","route","routeI","toString","searchWords","convertArrayTo2D","dictionary","wordRoutes","setWordRoutes","findError","setFindError","organizeFoundWords","words","sortedByLength","sort","a","b","localeCompare","newWordRoutes","push","splice","handleSearch","array2D","startTime","performance","now","result","endTime","console","log","Object","keys","WordInfo","useLocalStorage","setValue","useState","saved","localStorage","getItem","getStorageValue","useEffect","setItem","data","baseURL","process","setGridSize","setDictionary","allFile","nodes","fetch","publicURL","then","res","json","Settings","InputGrid","WordList","Head","module","exports","array","graph","rowI","new_row","colI","Math","floor","directions","dfs","visitedC","visitedL","currentNodeStr","found","binResult","binarySearchDict","join","concat","pop","nextNode","wordList","start","end","beginsWith","middlepoint","comparison","language","startsWith","row","col","arr","len","arr2","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","prototype","call","slice","constructor","test"],"sourceRoot":""}